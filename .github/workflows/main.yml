name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    env:
      NOMAD_USERNAME: ${{ secrets.NOMAD_USERNAME }}
      NOMAD_PASSWORD: ${{ secrets.NOMAD_PASSWORD }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git libfftw3-dev libgsl0-dev
          sudo apt-get install -y libboost-all-dev libopenmpi-dev
          sudo apt-get install -y gromacs

      - name: Verify GROMACS installation
        run: |
          gmx --version
          echo "GROMACS has been installed successfully."

      - name: Install dependencies
        run: |
          pip install -r requirements.txt 
          pip install -r test_requirements.txt 
          pip install .

      - name: Run linting
        run: black --check .

      - name: Run tests
        run: pytest

  tox:
    runs-on: ubuntu-latest
    env:
      NOMAD_USERNAME: ${{ secrets.NOMAD_USERNAME }}
      NOMAD_PASSWORD: ${{ secrets.NOMAD_PASSWORD }}
    strategy:
      matrix:
        python-version: ['3.9']
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git libfftw3-dev libgsl0-dev
          sudo apt-get install -y libboost-all-dev libopenmpi-dev
          sudo apt-get install -y gromacs

      - name: Verify GROMACS installation
        run: |
          gmx --version
          echo "GROMACS has been installed successfully."

      - name: Load cached venv
        uses: actions/cache@v3
        with:
          path: .tox
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('tox.ini') }}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions

      - name: Install martignac package
        run: |
          echo "Installing martignac package"
          python -m pip install .
          ls -la /home/runner/work/
          ls -la /home/runner/work/martignac/
          ls -la /home/runner/work/martignac/martignac/

      - name: Check if martini_v3.0.0.itp exists
        run: |
          if [ -f "/home/runner/work/martignac/scripts/martini_v300/martini_v3.0.0.itp" ]; then
            echo "martini_v3.0.0.itp exists."
          else
            echo "martini_v3.0.0.itp does not exist."
            exit 1
          fi

      - name: Test with tox
        run: tox -v

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install MkDocs and Dependencies
        run: |
          pip install mkdocs mkdocs-material mkdocstrings[python]

      - name: Build the documentation
        run: mkdocs build
